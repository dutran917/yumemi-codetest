{"version":3,"sources":["api/index.js","component/HighCharts/index.js","component/ListPrefectures/index.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","headers","process","HighCharts","data","cate","prefs","options","chart","height","title","text","label","xAxis","categories","crosshair","yAxis","min","series","highcharts","Highchart","ListPrefectures","list","handleonChange","value","className","map","item","type","id","name","prefCode","onChange","prefName","App","useState","city","setCity","report","setReport","selectedCity","setSelectedCity","setCategory","reportbyCity","a","api","get","re","console","log","result","useEffect","then","res","setName","setDisplay","year","push","name_tmp","e","target","checked","index","findIndex","splice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa4d6b41.chunk.js","sourcesContent":["import axios from \"axios\"\r\nexport default axios.create({\r\n    headers: {\r\n        \"X-API-KEY\" : process.env.REACT_APP_API_KEY\r\n    }\r\n})","import HighchartsReact from 'highcharts-react-official'\r\nimport Highchart from 'highcharts'\r\nimport React, { useState,useEffect } from 'react'\r\n\r\n// const generateOptions = (data,cate,prefs) => {\r\n//         return  {\r\n//             chart: {\r\n//                 height: 500,\r\n//             },\r\n//             title: {\r\n//                 text: data.label,\r\n//             },\r\n//             xAxis: {\r\n//                 title: {\r\n//                     text: '年度'\r\n//                 },\r\n//                 categories: cate,\r\n//                 crosshair: true,\r\n//             },\r\n//             yAxis: {\r\n//                 min: 0,\r\n//                 title: {\r\n//                     text: '人口数'\r\n//                 },\r\n//             },\r\n//             series: prefs\r\n//         }\r\n    \r\n// }\r\n\r\nexport default function HighCharts({data,cate,prefs}) {\r\n    // const [options,setOptions] = useState({})\r\n    // useEffect(() => {\r\n    //     setOptions(generateOptions(data,cate,prefs))\r\n    //     console.log('linechart',prefs)\r\n    // }, [data,cate,prefs])\r\n    const options = {\r\n        chart: {\r\n            height: 500,\r\n        },\r\n        title: {\r\n            text: data.label,\r\n        },\r\n        xAxis: {\r\n            title: {\r\n                text: '年度'\r\n            },\r\n            categories: cate,\r\n            crosshair: true,\r\n        },\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: '人口数'\r\n            },\r\n        },\r\n        series: prefs\r\n    }\r\n    return (\r\n        <HighchartsReact\r\n            highcharts={Highchart}\r\n            options={options}\r\n        ></HighchartsReact>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ListPrefectures({list,value,handleonChange}) {\r\n\r\n    return (\r\n    <div className='city'>\r\n        <div className='list-province'>     \r\n                都道府県\r\n        </div>\r\n        <div className=\"choose-city\">\r\n            \r\n            {\r\n                list.map((item) => {\r\n\r\n                    return <div key={item.prefCode} className=\"city-name\"><input type='checkbox' id='city' name='' value={item.prefCode} onChange={handleonChange}/> <p>{item.prefName}</p></div>\r\n                })\r\n            }\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from 'react';\nimport api from './api';\n\nimport './App.css';\nimport HighCharts from './component/HighCharts';\nimport ListPrefectures from './component/ListPrefectures';\n\n\n\nfunction App() {\n  const [city,setCity] = useState([])\n  const [report,setReport] = useState(null)\n  const [selectedCity,setSelectedCity] = useState('')\n  const [prefs,setPrefs] = useState([]) \n  const [categories,setCategory] = useState([])\n  const  reportbyCity = async (selectedCity) => {\n    let re = await api.get(`https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?prefCode=${selectedCity}`)\n    console.log(re)\n    if(re.data != '404')\n    {\n      setReport(re.data.result.data[0])\n      \n    }\n}\n\n  useEffect(()=>{\n    api.get('https://opendata.resas-portal.go.jp/api/v1/prefectures')\n    .then(\n      (res)=> {\n        console.log({res})\n        setCity(res.data.result)\n    }\n      )\n      \n    },[])\n    \n      const [name,setName] = useState('')\n      const [display,setDisplay] = useState(true)\n\n  useEffect(()=>{\n    console.log('report',report)\n    if(report!=null)\n    {\n      setCategory(report.data.map((item) =>{ \n        return item.year\n      }))\n      prefs.push({\n        name: name + 'の総人口',\n        data: report.data.map((item)=> item.value),\n      })\n    }\n  },[report])\n  let name_tmp = ''\n  const handleonChange = (e)=>{\n    // console.log(e.target.checked)\n    if(e.target.checked == true)\n    {\n      setSelectedCity(e.target.value)\n      city.map((item)=> {if(item.prefCode == e.target.value) setName(item.prefName)})\n      setDisplay(true)\n    }\n    else\n    {\n      setDisplay(false)\n      // let name_tmp = ''\n      city.map((item)=> {\n        if(item.prefCode == e.target.value)\n          name_tmp = item.prefName\n      })\n      // console.log(name_tmp)\n      let index = prefs.findIndex((a) => (a.name ) == name_tmp+'の総人口')\n      console.log('index',index)\n      if(index != -1)\n      {\n        prefs.splice(index,1)\n        // setPrefs(prefs)\n      }\n    }\n  }\n  \n  useEffect(()=>{\n    reportbyCity(selectedCity)\n    \n  },[selectedCity])\n  return (\n    <div className='container'>\n      <div className='title'>\n        <h1>日本の都道府県人口チャート</h1>\n      </div>\n      <div className='main'>\n      <ListPrefectures list={city} value={selectedCity} handleonChange={handleonChange}></ListPrefectures>\n      {report != null&&\n      <div className='chart'><HighCharts  data={report} cate={categories} prefs={prefs}></HighCharts></div>\n      }\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}